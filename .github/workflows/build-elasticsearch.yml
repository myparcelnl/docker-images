name: 'Build Elasticsearch images'

on:
  push:
    branches:
      - main
    paths:
      - images/elasticsearch/**/*

  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  # Encapsulate the variables in a `vars` object to prevent them from being parsed.
  DOCKER_CACHE_FROM:       "${{ 'type=gha,scope=build-${{ matrix.es-version }}' }}"
  DOCKER_CACHE_TO:         "${{ 'type=gha,scope=build-${{ matrix.es-version }},mode=max' }}"
  DOCKER_DEFAULT_PLATFORM: 'linux/amd64,linux/arm64'
  IMAGE:                   'myparcel/elasticsearch'
  UBUNTU_DISTRIB_CODENAME: 'focal'
  #language=json
  ES_MATRIX: |-
    {
      "es-version": [ "6.8.20", "6.8.21", "6.8.22" ],
      "include": [
        {
          "es-version": "6.8.23",
          "latest": true,
          "es-major": "6",
          "es-minor": "6.8"
        }
      ]
    }

jobs:
  set-matrix:
    runs-on: ubuntu-22.04
    outputs: { matrix: '${{ steps.set-matrix.outputs.matrix }}' }
    steps:
      - id: set-matrix
        #language=bash
        run: echo "matrix=${ES_MATRIX//$'\n'}" >> $GITHUB_OUTPUT

  build-elasticsearch:
    name: 'Build Elasticsearch images'
    needs: set-matrix
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.set-matrix.outputs.matrix) }}
    env:
      is_main: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v3

      # Login to the Docker Hub
      - uses: docker/login-action@v2
        if: ${{ !env.ACT }}  # Don't run when using `act`.
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Setup QEMU for cross-architecture builds
      - uses: docker/setup-qemu-action@v2
        if: ${{ !env.ACT }}  # Don't run when using `act`.

      - uses: docker/setup-buildx-action@v2

      - uses: docker/metadata-action@v2
        id: meta
        if: ${{ !env.ACT }}  # Don't run when using `act`.
        with:
          images: ${{ env.IMAGE }}
          tags: |
            # Tags for main branch
            type=raw,value=latest,enable=${{ env.is_main && matrix.latest }}
            type=raw,value=${{ matrix.es-major }},enable=${{ env.is_main && matrix.es-major }}
            type=raw,value=${{ matrix.es-minor }},enable=${{ env.is_main && matrix.es-minor }}
            type=raw,value=${{ matrix.es-version }},enable=${{ env.is_main }}
            
            # Tags for branches, tags and pull requests
            type=ref,event=branch,suffix=-${{ matrix.es-version }}
            type=ref,event=tag,suffix=-${{ matrix.es-version }}
            type=ref,event=pr,suffix=-${{ matrix.es-version }}
            type=sha,suffix=-${{ matrix.es-version }}

      - uses: docker/build-push-action@v2
        with:
          context: images/elasticsearch
          build-args: |
            ES_VERSION=${{ matrix.es-version }}
            UBUNTU_DISTRIB_CODENAME=${{ env.UBUNTU_DISTRIB_CODENAME }}
          tags: ${{ steps.meta.outputs.tags }}
          push: ${{ !env.ACT }}  # Don't push when using `act`,
          load: ${{ env.ACT }}   # instead load the image into the Docker daemon.
          platforms: ${{ env.DOCKER_DEFAULT_PLATFORM }}
          cache-from: ${{ env.DOCKER_CACHE_FROM }}
          cache-to: ${{ env.DOCKER_CACHE_TO }}
