name: 'Build wordpress images'

on:
  push:
    branches:
      - main

    paths:
      - images/wordpress/**/*

  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  prepare-php:
    uses: ./.github/workflows/--prepare-php.yml
    secrets: inherit
    with:
      min-version: '8.2'

  prepare-wp:
    runs-on: ubuntu-22.04
    outputs:
      wp-matrix: ${{ steps.wp-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - name: 'Get all WordPress versions as json array'
        id: wp
        #language=bash
        run: |
          versions=$(curl -s https://api.wordpress.org/core/version-check/1.7/ | jq -r '[.offers[].version] | unique | .[]')

          echo "versions=$versions" >> $GITHUB_OUTPUT

      - uses: ./.github/actions/create-matrix
        id: wp-matrix
        with:
          versions: ${{ steps.wp.outputs.versions }}

      - uses: ./.github/actions/create-matrix
        id: wp-matrix
        with:
          versions: ${{ steps.wp.outputs.versions }}

  build:
    runs-on: ubuntu-22.04
    needs:
      - prepare-php
      - prepare-wp
    strategy:
      fail-fast: false
      matrix:
        php: ${{ fromJson(needs.prepare-php.outputs.matrix) }}
        wp: ${{ fromJson(needs.prepare-wp.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/login-ghcr
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          echo ${{ toJson(matrix) }}
          echo ${{ toJson(matrix.php) }}
          echo ${{ toJson(matrix.wp) }}
          
          echo ${{ matrix }}
          echo ${{ matrix.php }}
          echo ${{ matrix.wp }}
          
          echo ${{ matrix.php.version }}
          echo ${{ matrix.wp.version }}

#      - uses: ./.github/actions/build-push
#        with:
#          registry: ghcr.io
#          cache-mode: 'min'
#          context: images/wordpress
#          image: myparcelnl/wordpress
#          suffix: ${{ matrix.wp }}-php${{ matrix.php }}
#          latest: ${{ matrix.wp == needs.prepare.outputs.wp-latest && matrix.php == '8.2' }}
#          build-args: |
#            PHP_VERSION=${{ matrix.php }}
#            WP_VERSION=${{ matrix.wp }}
